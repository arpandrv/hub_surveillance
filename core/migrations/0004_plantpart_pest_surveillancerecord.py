# Generated by Django 5.1.7 on 2025-04-26 04:37

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_planttype_farm_size_hectares_farm_stocking_rate_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('affects_plant_types', models.ManyToManyField(blank=True, related_name='pests', to='core.planttype')),
                ('affects_plant_parts', models.ManyToManyField(blank=True, related_name='pests', to='core.plantpart')),
            ],
        ),
        migrations.CreateModel(
            name='SurveillanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_performed', models.DateTimeField(default=django.utils.timezone.now)),
                ('plants_surveyed', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surveillance_records', to='core.farm')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surveillance_records', to='core.grower')),
                ('pests_found', models.ManyToManyField(blank=True, related_name='surveillance_records', to='core.pest')),
                ('plant_parts_checked', models.ManyToManyField(blank=True, related_name='surveillance_records', to='core.plantpart')),
            ],
        ),
    ]
